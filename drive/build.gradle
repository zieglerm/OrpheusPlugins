/*
 * Copyright (c) 2014 OpenSilk Productions LLC
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'hugo'

// Versioning
def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

assert(versionMinor < 100) // Double digits
assert(versionPatch < 100) // Double digits
assert(versionBuild < 100) // Double digits

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "org.opensilk.music.plugin.drive"
        minSdkVersion 14
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
        versionName String.format("%d.%d.%d", versionMajor, versionMinor, versionPatch)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('../../KeyStore/release2.properties')))
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
        debug {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('../../KeyStore/debug2.properties')))
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix rootProject.getDebugVersionSuffix()
            runProguard false//true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            runProguard false//true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile 'com.jakewharton:butterknife:5.1.0'
    compile 'com.jakewharton.timber:timber:2.3.0'

    provided 'com.squareup.dagger:dagger-compiler:1.2.+'
    compile 'com.squareup.dagger:dagger:1.2.+'
    compile 'org.opensilk.silkdagger:libsilkdagger:0.2.2-SNAPSHOT@aar'

    compile ('com.google.api-client:google-api-client-android:1.18.0-rc') {
        exclude module: 'httpclient'
    }
    compile ('com.google.apis:google-api-services-drive:v2-rev127-1.18.0-rc') {
        exclude module: 'httpclient'
    }
    compile ('com.google.api-client:google-api-client-gson:1.18.0-rc') {
        exclude module: 'httpclient'
    }
    compile 'com.google.android.gms:play-services:4.4.+'

    compile project(':common')
}
