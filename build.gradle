/*
 * Copyright (c) 2014 OpenSilk Productions LLC
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.10.+'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url "../../m2/repository" }
        maven { url "http://4thline.org/m2" }
        mavenCentral()
    }
}

// Build config
ext.compileSdkVersion = 19
ext.buildToolsVersion  = "19.1.0"

// Versioning
def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

assert(versionMinor < 100) // Double digits
assert(versionPatch < 100) // Double digits
assert(versionBuild < 100) // Double digits

// defaultConfig
ext.minSdkVersion = 14
ext.targetSdkVersion = 19
ext.versionCode = versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
ext.versionName = String.format("%d.%d.%d", versionMajor, versionMinor, versionPatch)

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def getDebugVersionSuffix() {
    // When building with Android Studio gitSha() is null;
    return "${gitSha()}".isEmpty() ? "-SNAPSHOT" : "-SNAPSHOT-${gitSha()}"
}
